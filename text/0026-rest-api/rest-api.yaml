openapi: 3.0.1
info:
  title: IOTA REST API
  description: 'This document describes the upcoming REST API for Hornet and Bee.'
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about IOTA
  url: https://iota.org
servers:
  - url: https://127.0.0.1:8080/v1

tags:
  - name: node
    description: Everything about the node itself.
  - name: tangle
    description: Everything about the tangle itself.
  - name: messages
    description: Everything about messages.
  - name: transaction-messages
    description: Everything about transaction-messages.
paths:
  /info:
    get:
      tags:
        - node
      summary: Returns information about the node.
      description: Returns information about the node.
      operationId: get-info
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetInfoResponse'
              examples:
                Example 1:
                  $ref: '#/components/examples/get-info-response-example-1'
  /tips:
    get:
      tags:
        - tangle
      summary: Returns two non-lazy tips.
      description: Returns two non-lazy tips. In case the node can only provide one tip, tip1 and tip2 are identical.
      operationId: get-tips
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTipsResponse'
              examples:
                Example 1:
                  $ref: '#/components/examples/get-tips-response-example-1'
                Example 2:
                  $ref: '#/components/examples/get-tips-response-example-2'
  /messages/by-hash:
    get:
      tags:
        - messages
      summary: Find a message by its hash.
      description: Find a message by its hash. This endpoint returns the given
        message including payload.
      operationId: get-messages-by-hash
      parameters:
        - in: query
          name: hashes
          schema:
            type: array
            items:
              type: string
          required: true
          description: Hash of the message.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessagesByHashResponse"
              examples:
                Example 1:
                  $ref: '#/components/examples/get-messages-by-hash-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /messages/by-tag:
    get:
      tags:
        - messages
      summary: Find all messages that are marked by a given tag.
      description: Find all messages that are marked by a given tag.
      operationId: get-messages-by-tag
      parameters:
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          required: true
          description: Tag of the message.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessagesByTagResponse"
              examples:
                Example 1:
                  $ref: '#/components/examples/get-messages-by-tag-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /messages/by-hash/is-referenced-by-milestone:
    get:
      tags:
        - messages
      summary: Check if a message is referenced by a milestone.
      description: Check if a message is referenced by a milestone.
      operationId: get-is-referenced-by-milestone
      parameters:
        - in: query
          name: hashes
          schema:
            type: array
            items:
              type: string
          required: true
          description: Hash of the message.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIsReferencedByMilestoneResponse"
              examples:
                Example 1:
                  $ref: '#/components/examples/get-is-referenced-by-milestone-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /messages:
    post:
      tags:
        - messages
      summary: Submit a message.
      description: Submit a message. The node takes care of missing fields and tries to build the message. On success, the message will be stored in the Tangle. This endpoint will return the hash of the message by the response headers.
      operationId: post-messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostMessagesParameters"
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            Location:
              schema:
                $ref: '#/components/schemas/PostMessagesResponse'
              description: Hash of the submitted message.
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
  /transaction-messages/is-confirmed:
    get:
      tags:
        - transaction-messages
      summary: Check if a transaction-message is confirmed.
      description: Check if a transaction-message is confirmed.
      operationId: get-is-confirmed
      parameters:
        - in: query
          name: hashes
          schema:
            type: array
            items:
              type: string
          required: true
          description: Hash of the message.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIsConfirmedResponse"
              examples:
                Example 1:
                  $ref: '#/components/examples/get-is-confirmed-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /transaction-messages/by-address:
    get:
      tags:
        - transaction-messages
      summary: Find all transaction-messages that use a given address.
      description: Find all transaction-messages that use a given address.
      operationId: get-messages-by-address
      parameters:
        - in: query
          name: hashes
          schema:
            type: array
            items:
              type: string
          required: true
          description: Address of the message.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesByAddressResponse'
              examples:
                Example 1:
                  $ref: '#/components/examples/get-messages-by-address-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /outputs/by-id:
    get:
      tags:
        - transaction-messages
      summary: Find an output by its identifier.
      description: Find an output by its identifier. An output is identified by the concatenation of `transaction_hash+output_index`. This endpoint returns the id of the output, the corresponding address, the amount and spend status. This information can only be retrieved for outputs which are part of a confirmed transaction.
      operationId: get-outputs-by-id
      parameters:
        - in: query
          name: ids
          schema:
            type: array
            items:
              type: string
          required: true
          description: Identifiers of the outputs.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOutputsByIdResponse"
              examples:
                Example 1:
                  $ref: '#/components/examples/get-outputs-by-id-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'
  /outputs/by-address:
    get:
      tags:
        - transaction-messages
      summary: Get all outputs that use a given address.
      description: Get all outputs that use a given address.
      operationId: get-outputs-by-address
      parameters:
        - in: query
          name: outputs
          schema:
            type: array
            items:
              type: string
          required: true
          description: Address of the outputs to return.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutputsByAddressResponse'
              examples:
                Example 1:
                  $ref: '#/components/examples/get-outputs-by-address-response-example-1'
        "400":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/invalid-data-provided-response-example'
        "404":
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/can-not-find-data-response-example'

components:

  examples:
    invalid-data-provided-response-example:
      value:
        error:
          code: 400
          message: "invalid data provided"
    can-not-find-data-response-example:
      value:
        error:
          code: 404
          message: "can not find data"
    get-info-response-example-1:
      value:
        data:
          name: Hornet
          version: 0.5.2
          isHealthy: true
          operatingNetwork: Mainnet
          coordinatorAddress: cedb6ed996fc9a4e62dd6cb58f09ee3354c5f034f3250bfad9b0481e98cde625
          isSynced: true
          latestMilestoneHash: d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          latestMilestoneIndex: 1699556
          latestSolidMilestoneHash: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          latestSolidMilestoneIndex: 1699556
          pruningIndex: 1696326
          time: 1599584382
          features:
            - Plugin X
            - Plugin Y
    get-tips-response-example-1:
      value:
        data:
          tip1: "f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d"
          tip2: "78d546b46aec4557872139a48f66bc567687e8413578a14323548732358914a2"
    get-tips-response-example-2:
      value:
        data:
          tip1: "f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d"
          tip2: "f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d"
    get-messages-by-hash-response-example-1:
      value:
        data:
          - hash: "1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d"
            version: 1
            parent1: "ae07bf7ee5117a8fac99cb9969cfec17e74b3d5a575171e172d8a6e5bcbb237c"
            parent2: "d33ec3e5a9e4d5759923f10771ce61d62627ec12464fc600dd46d58c542e5fd2"
            payload:
              type: 2
              index: "abc"
              data: "SGVsbG8gd29ybGQh"
    get-messages-by-tag-response-example-1:
      value:
        data:
          - "abc":
              - hash: "1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d"
                version: 1
                parent1: "ae07bf7ee5117a8fac99cb9969cfec17e74b3d5a575171e172d8a6e5bcbb237c"
                parent2: "d33ec3e5a9e4d5759923f10771ce61d62627ec12464fc600dd46d58c542e5fd2"
                payload:
                  type: 2
                  index: "abc"
                  data: "SGVsbG8gd29ybGQh"
    get-is-referenced-by-milestone-response-example-1:
      value:
        data:
          - hash: "1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d"
            isReferencedByMilestone: true
            milestoneIndex: 1599584382
            milestoneTimestamp: 1699556
    get-is-confirmed-response-example-1:
      value:
        data:
          - hash: "1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d"
            isConfirmed: true
            milestoneIndex: 1599584382
            milestoneTimestamp: 1699556
    get-messages-by-address-response-example-1:
      value:
        data:
          - "afc4930b7b2828bf0e47d4ad07212fbed75830d04665fc24b007e6231f6e20e8":
              - hash: "1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d"
                version: 1
                parent1: "f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d"
                parent2: "78d546b46aec4557872139a48f66bc567687e8413578a14323548732358914a2"
                payload:
                  type: 0
                  transaction:
                    type: 0
                    inputs:
                      - type: 0
                        transactionId: 162863a2f4b134d352a886bf9cfb08788735499694864753ee686e02b3763d9d
                        transactionOutputIndex: 3
                      - type: 0
                        transactionId: 1bd024285b8237c31f159d1707d48e0be2cdd88cc1a266f6376df501619bd312
                        transactionOutputIndex: 1
                      - type: 0
                        transactionId: 62041ae44cb1746739bb4f4afe58cba7901250325b1ee139d2c8f64eb5d1fd93
                        transactionOutputIndex: 4
                    outputs:
                      - type: 0
                        address:
                          type: 1
                          address: 5f24ebcb5d48acbbfe6e7401b502ba7bb93acb3591d55eda7d32c37306cc805f
                        amount: 5710
                      - type: 0
                        address:
                          type: 1
                          address: 5f24ebcb5d48acbbfe6e7401b502ba7bb93acb3591d55eda7d32c37306cc805f
                        amount: 7425
                      - type: 0
                        address:
                          type: 1
                          address: 4e07ceb3a3e51c79021c07c764d69265ed484aeff646817b21051a17a6af53db
                        amount: 7342
                    payload:
                      type: 2
                      index: allyourtritsbelongtous
                      data: a487f431d852b060b49427f513dca1d5288e697e8bd9eb062534d09e7cb337ac
                  unlockBlocks:
                    - type: 0
                      signature:
                        type: 1
                        publicKey: ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
                        signature: 651941eddb3e68cb1f6ef4ef5b04625dcf5c70de1fdc4b1c9eadb2c219c074e0ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
                    - type: 0
                      signature:
                        type: 1
                        publicKey: 1bd024285b8237c31f159d1707d48e0be2cdd88cc1a266f6376df501619bd312
                        signature: c106ef037ad707ebd76991d654e4d06982f7cab80219f35337d8d546372c88e832aa30914971eb00d8d953bdaaa0f6bd575df87fe9efefaabc13c31b60429385
                    - type: 1
                      reference: 0
                nonce: 133945865838
    get-outputs-by-id-response-example-1:
      value:
        data:
          - "id": "606c41249a0ad5fc1e026ed40b507d73bfa83aaaeb59665be916e61b119f2d531"
            address: "67632d2dbb334ba8f408bd83b2f70fd43f528ab08bea8dd5c6fdea4c34dc36fb"
            amount: "5473"
            spent: false
    get-outputs-by-address-response-example-1:
      value:
        data:
          - "67632d2dbb334ba8f408bd83b2f70fd43f528ab08bea8dd5c6fdea4c34dc36fb":
              - "id": "606c41249a0ad5fc1e026ed40b507d73bfa83aaaeb59665be916e61b119f2d531"
                address: "67632d2dbb334ba8f408bd83b2f70fd43f528ab08bea8dd5c6fdea4c34dc36fb"
                amount: "5473"
                spent: false
  schemas:
    OutputResponse:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        amount:
          type: integer
        spent:
          type: boolean
    MessageResponse:
      type: object
      properties:
        hash:
          type: string
        version:
          type: integer
        parent1:
          type: string
        parent2:
          type: string
        payload:
          type: object
          properties:
            type:
              type: integer
          additionalProperties: true
        nonce:
          type: string
    ErrorResponse:
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
    GetInfoResponse:
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            isHealthy:
              type: boolean
            operatingNetwork:
              type: string
            coordinatorAddress:
              type: string
            isSynced:
              type: boolean
            latestMilestone:
              type: string
            latestMilestoneindex:
              type: integer
            lastestSolidMilestone:
              type: string
            latestSolidMilestoneIndex:
              type: integer
            pruningIndex:
              type: integer
            time:
              type: integer
            features:
              type: array
              items:
                type: string
    GetTipsResponse:
      properties:
        data:
          type: object
          properties:
            tip1:
              type: string
            tip2:
              type: string
    GetMessagesByHashResponse:
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/MessageResponse"
    GetMessagesByTagResponse:
      properties:
        data:
          type: array
          items:
            additionalProperties:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/MessageResponse"
    GetIsReferencedByMilestoneResponse-1:
      properties:
        hash:
          type: string
        isConfirmed:
          type: boolean
        milestoneIndex:
          type: integer
        milestoneTimestamp:
          type: integer
    GetIsReferencedByMilestoneResponse-2:
      properties:
        isConfirmed:
          type: boolean
    GetIsReferencedByMilestoneResponse:
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/GetIsReferencedByMilestoneResponse-1'
              - $ref: '#/components/schemas/GetIsReferencedByMilestoneResponse-2'
    PostMessagesParameters:
      properties:
        version:
          type: integer
        parent1:
          type: string
        parent2:
          type: string
        payload:
          type: object
          properties:
            type:
              type: integer
          required:
            - type
          additionalProperties: true
        nonce:
          type: string
      required:
        - payload
    PostMessagesResponse:
      type: string
    GetIsConfirmedResponse-1:
      properties:
        hash:
          type: string
        isConfirmed:
          type: boolean
        milestoneIndex:
          type: integer
        milestoneTimestamp:
          type: integer
    GetIsConfirmedResponse-2:
      properties:
        isConfirmed:
          type: boolean
    GetIsConfirmedResponse:
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/GetIsConfirmedResponse-1'
              - $ref: '#/components/schemas/GetIsConfirmedResponse-2'
    GetMessagesByAddressResponse:
      properties:
        data:
          type: array
          items:
            additionalProperties:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/MessageResponse"
    GetOutputsByIdResponse:
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/OutputResponse"

    GetOutputsByAddressResponse:
      properties:
        data:
          type: array
          items:
            additionalProperties:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/OutputResponse"